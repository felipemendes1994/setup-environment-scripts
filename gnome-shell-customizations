#!/bin/bash

basic_dependencies(){
	sudo apt update

	sudo apt install apt-transport-https -y
	sudo apt install curl -y
	sudo apt install ca-certificates -y
	sudo apt install software-properties-common -y
	sudo apt install snapd -y

	sudo apt update
}

__brave_browser(){
	sudo curl -fsSLo /usr/share/keyrings/brave-browser-archive-keyring.gpg https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg
	echo "deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg arch=amd64] https://brave-browser-apt-release.s3.brave.com/ stable main"|sudo tee /etc/apt/sources.list.d/brave-browser-release.list
	sudo apt update
	sudo apt install brave-browser -y
}

__google_chrome(){
	wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
	sudo apt install ./google-chrome-stable_current_amd64.deb -y
}

install_browsers(){
	# __google_chrome
	__brave_browser
}

__terminator(){
	sudo apt install terminator -y
}

__vim(){
	sudo apt install vim -y
}

__git(){
	sudo apt install git -y
}

__vscode(){
	sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main" > /etc/apt/sources.list.d/vscode.list'
	curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
	sudo mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg
	sudo apt update
	sudo apt install code -y
}

__dbeaver(){
	echo "deb https://dbeaver.io/debs/dbeaver-ce /" | sudo tee /etc/apt/sources.list.d/dbeaver.list
	wget -O - https://dbeaver.io/debs/dbeaver.gpg.key | sudo apt-key add -
	sudo apt update
	sudo apt-get install dbeaver-ce -y
}

__npm(){
	sudo apt install npm -y
}

__nvm(){
	# https://linuxize.com/post/how-to-install-node-js-on-ubuntu-18.04/
	curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash
	export NVM_DIR="$HOME/.nvm"
	[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
	[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
}

__maven(){
	sudo apt install maven -y
}

__yarn(){
	curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | gpg --dearmor | sudo tee /usr/share/keyrings/yarnkey.gpg >/dev/null
	echo "deb [signed-by=/usr/share/keyrings/yarnkey.gpg] https://dl.yarnpkg.com/debian stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
	sudo apt update 
	sudo apt install yarn -y
}

__docker(){
	curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
	sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
	sudo apt update
	apt-cache policy docker-ce
	sudo apt install docker-ce -y

	sudo usermod -aG docker ${USER}
}

__docker_compose(){
	sudo curl -L https://github.com/docker/compose/releases/download/1.21.2/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
	sudo chmod +x /usr/local/bin/docker-compose
}

__nodejs(){
	sudo apt install nodejs
}

install_development_tools(){
	__terminator
	__vim
	__git
	__vscode
	__dbeaver
	__npm
	__nvm
	__maven
	__yarn
	__docker
	__docker_compose
	# __nodejs
}

__java8(){
	sudo apt install openjdk-8-jdk -y
}

__java11(){
	sudo apt install openjdk-11-jdk -y
}

__java13(){
	sudo apt install openjdk-13-jdk -y
}

__java16(){
	sudo apt install openjdk-16-jdk -y
}

install_java_versions(){
	__java8
	__java11
	# __java13
	# __java16
}

__postman(){
	sudo snap install postman
}

__discord(){
	sudo snap install discord
}

__slack(){
	sudo snap install slack
}

__teams(){
	sudo snap install teams
}

__spotify(){
	sudo snap install spotify
}

__libre_office(){
	sudo apt install libreoffice-gnome libreoffice -y
}

__whatsapp(){
	sudo snap install whatsapp-app
}

__notion(){
	sudo snap install notion-snap
}

__trello(){
	sudo snap install trello-desktop
}

install_tools(){
	# __discord
	__slack
	# __teams
	__spotify
	__libre_office
	__whatsapp
	__notion
	__trello
	__postman
}

_wait_and_clear(){
	read -p '' -n1 -s
	clear
}

__papyrus_icons(){
	clear
	echo 'Adding papyrus icons package...'
	sudo add-apt-repository ppa:papirus/papirus
	sudo apt install papirus-icon-theme -y
	gsettings set org.gnome.desktop.interface icon-theme 'Papirus'
	echo 'Papyrus installation finished... Press any key to proceed...'
	_wait_and_clear
}

__create_personal_dir(){
	echo 'Creating folder ~/Documentos/pessoais...'
	mkdir -p ~/Documentos/pessoais && cd ~/Documentos/pessoais
	_wait_and_clear
}

__create_personal_workspaces(){
	echo 'Creating folders ~/.workspaces/develop and ~/.workspaces/test'
	mkdir -p ~/.workspaces/develop && mkdir -p ~/.workspaces/test
	_wait_and_clear
}

__create_ssh_key(){
	ssh-keygen
	_wait_and_clear
}

__clone_personal_files_repository(){
	echo 'Cloning repository with basic files for configuration...'
	git clone git@github.com:felipemendes1994/setup-environment-files.git && cd ./setup-environment-files
	_wait_and_clear
}

__download_files_from_drive(){
	echo 'Now its time to download the needed files from google drive...'
	echo 'When finished press any key to proceed...'
	_wait_and_clear
	# Aqui talvez eu vou fazer download dos arquivo disponiveis no google drive atraves de um link
}

__create_local_bin_dir_and_add_to_path(){
	echo 'Creating folder ~/.local/bin...'
	BIN="$HOME/.local/bin"
	mkdir -p $BIN && export PATH="$BIN:$PATH"
	_wait_and_clear
}

__create_symbolical_link_for_bash_aliases(){
	echo 'Creating symbolical link to bash_aliases...'
	ln -s $HOME/Documentos/pessoais/setup-environment-files/bash_aliases $HOME/.bash_aliases
	_wait_and_clear
}

__set_git_branch_on_terminal(){
	echo 'Setting git branch in terminal...'
	# https://coderwall.com/p/fasnya/add-git-branch-name-to-bash-prompt
	parse_git_branch() {
		git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
	}
	export PS1="\u@\h \[\033[32m\]\w\[\033[33m\]\$(parse_git_branch)\[\033[00m\] $ "
	_wait_and_clear
}

__create_shortcut_to_notes(){
	echo 'Creating shortcut for notes in menu...'
	#ln -s $ORIGEM $DESTINO
	ln -s $HOME/Documentos/pessoais/setup-environment-files/atalhos/notas.desktop $HOME/.local/share/applications/notas.desktop
	_wait_and_clear
}

__add_user_in_sudoers_file(){
	# Ainda pesquisando um jeito de conseguir fazer essa baga√ßa funcionar por linha de comando
	echo 'Now its time to set sudoers file... '
	echo 'Paste the following command into /etc/sudoers file...'
	echo '$USER ALL=(ALL) NOPASSWD: ALL'
	_wait_and_clear
}

__set_gnome_extensions(){
	sudo apt install gnome-tweaks -y
	# sudo apt install gnome-shell-extension-multi-monitors -y

	clear
	echo 'Now its time to enable gnome extensions directly in your browser... '
	echo 'Open the following urls and dont forget to customize them...'
	echo ''
	read -p '' -n1 -s

	# Dash to panel/ Dash to dock
	echo 'https://extensions.gnome.org/extension/307/dash-to-dock/'
	read -p '' -n1 -s

	# Desktop Icons
	echo 'https://extensions.gnome.org/extension/1465/desktop-icons/'
	read -p '' -n1 -s
	
	# sound input and output device chooser
	echo 'https://extensions.gnome.org/extension/906/sound-output-device-chooser/'
	read -p '' -n1 -s

	# status area horizontal spacing
	echo 'https://extensions.gnome.org/extension/355/status-area-horizontal-spacing/'
	read -p '' -n1 -s

	# system monitor
	echo 'https://extensions.gnome.org/extension/120/system-monitor/'
	read -p '' -n1 -s

	_wait_and_clear
}

__add_brave_extensions(){
	echo 'Copying extensions to Brave folder...'
	rm -rf ~/.config/BraveSoftware/Brave-Browser/Default/Extensions
	cp -r ~/Documentos/pessoais/setup-environment-files/Extensions ~/.config/BraveSoftware/Brave-Browser/Default
	_wait_and_clear
}

__add_brave_preferences(){
	echo 'Copying Brave preferences to Brave folder...'
	rm -rf ~/.config/BraveSoftware/Brave-Browser/Default/Preferences
	cp -r ~/Documentos/pessoais/setup-environment-files/Preferences ~/.config/BraveSoftware/Brave-Browser/Default
	_wait_and_clear
}

__final_message(){
	echo 'There is some remaining configuration you must do manually...'
	echo 'Press any key to finalize this script...'
	_wait_and_clear
}

_open_brave(){
	brave-browser
}

personal_setup(){
	__add_user_in_sudoers_file

	__papyrus_icons

	__create_personal_dir
	__create_personal_workspaces	

	# __create_ssh_key
	__clone_personal_files_repository
	__download_files_from_drive #maybe all these file should be inside the repository

	__create_local_bin_dir_and_add_to_path

	__create_symbolical_link_for_bash_aliases
	__create_shortcut_to_notes

	__add_brave_extensions
	__add_brave_preferences
	
	__set_git_branch_on_terminal

	__set_gnome_extensions

	__final_message
}

remove_unnecessary_packages(){
	sudo apt autoremove -y
}

setup_only(){
	# echo 'To run setup successfully, the OS must be restarted first... '

	echo 'Now the personal configuration is going to start...'
	echo 'Press any key to proceed...'
	_wait_and_clear
	read -p '' -n1 -s
	clear
	personal_setup
	remove_unnecessary_packages
}

full_installation(){
	basic_dependencies
	browsers
	development_tools
	java_versions
	tools
	_open_brave
	# echo 'Now you must restart the OS to finish the configuration'
	setup_only
	# Precisa reiniciar o SO
}
	
if [ "$1" ]; then
	if [ "$1" = "--install-apps" ]; then 
		full_installation
	fi

	if [ "$1" = "--setup" ]; then
		personal_setup
		remove_unnecessary_packages
	fi
else
	echo 'You must say which kind of installation you want to make...'
	echo 'provide the arg --install_apps for a full installation or --setup only for setup'
fi